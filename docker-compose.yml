version: "3.2"

volumes:
  prometheus_data: {}
  grafana_data: {}

services:
  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/usr/share/prometheus/console_libraries"
      - "--web.console.templates=/usr/share/prometheus/consoles"
      - "--web.external-url=http://127.0.0.1/prometheus"
      - "--log.level=debug"
    restart: always
    networks:
      proxy:
        aliases:
          - prometheus
    container_name: prometheus
    labels:
      - "namespace=Prometheus"
      - "traefik.backend=prometheus"
      - "traefik.frontend.rule=PathPrefix:/prometheus"
      - "traefik.enable=true"
      - "traefik.port=9090"
      - "traefik.passHostHeader=true"
      - "traefik.frontend.auth.basic.users=admin:$$apr1$$1etHutoM$$iv3F5h9CmT3W0e0XL3mHS1"
    environment:
      - TZ=Europe/Berlin

  node_exporter:
    image: prom/node-exporter:latest
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - "--path.procfs=/host/proc"
      - "--path.sysfs=/host/sys"
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    networks:
      proxy:
        aliases:
          - node_exporter
    container_name: node_expoter
    labels:
      - "namespace=Prometheus"
      - "traefik.enable=true"
      - "traefik.backend=node_exporter"
      - "traefik.frontend.rule=PathPrefix:/node_exporter;ReplacePath:/metrics"
      - "traefik.port=9100"
      - "traefik.passHostHeader=true"
      - "traefik.frontend.auth.basic.users=admin:$$apr1$$1etHutoM$$iv3F5h9CmT3W0e0XL3mHS1"

  grafana:
    image: grafana/grafana:latest
    depends_on:
      - prometheus
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini
    networks:
      proxy:
        aliases:
          - grafana
    restart: always
    user: "104"
    container_name: grafana
    labels:
      - "namespace=Prometheus"
      - "traefik.backend=grafana"
      - "traefik.frontend.rule=PathPrefixStrip:/grafana"
      - "traefik.enable=true"
      - "traefik.port=3000"
      - "traefik.passHostHeader=true"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=foobar
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SERVER_ROOT_URL=%(protocol)s://%(domain)s:%(http_port)s/grafana
      - TZ=Europe/Berlin

  traefik:
    image: traefik:v1.7
    networks:
      proxy:
    ports:
      - "8080:80"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/traefik.toml:/etc/traefik/traefik.toml:ro
      - ./traefik/acme.json:/etc/traefik/acme.json:rw
    labels:
      - "namespace=Prometheus"
      - "traefik.enable=true"
      - "traefik.backend=traefik"
      - "traefik.frontend.rule=PathPrefixStrip:/traefik"
      - "traefik.port=8080"
      - "traefik.passHostHeader=true"
      - "traefik.frontend.auth.basic.users=admin:$$apr1$$1etHutoM$$iv3F5h9CmT3W0e0XL3mHS1"
    environment:
      - TZ=Europe/Berlin
    container_name: traefik
    restart: always

networks:
  proxy:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.19.0.0/24
